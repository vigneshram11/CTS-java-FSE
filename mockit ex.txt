Exercise 1: Mocking and Stubbing

Scenario: Use Mockito to mock an external API and stub its method to return "Mock Data".


import static org.mockito.Mockito.*;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;

import static org.junit.jupiter.api.Assertions.*;


interface ExternalApi {
    String getData();
}


class MyService {
    private ExternalApi api;

    public MyService(ExternalApi api) {
        this.api = api;
    }

    public String fetchData() {
        return api.getData();
    }
}

public class MyServiceTest {

    @Test
    public void testExternalApi() {
        
        ExternalApi mockApi = Mockito.mock(ExternalApi.class);

        
        when(mockApi.getData()).thenReturn("Mock Data");

        
        MyService service = new MyService(mockApi);
        String result = service.fetchData();

        
        assertEquals("Mock Data", result);
    }
}


Exercise 2: Verifying Interactions

Scenario: Ensure a method in the mock was called.


import static org.mockito.Mockito.*;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;



public class MyServiceInteractionTest {

    @Test
    public void testVerifyInteraction() {
        
        ExternalApi mockApi = Mockito.mock(ExternalApi.class);

        
        MyService service = new MyService(mockApi);

        
        service.fetchData();

        
        verify(mockApi).getData();
    }
}